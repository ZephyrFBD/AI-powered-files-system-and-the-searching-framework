，也可以认为它把函数f左移了b个单位，
偏置除了有一个固定不变的输入值1 以外，其他的很像权重。标量n是加权输入wp和偏置b
的和，它作为转移函数f的参数。函数f是转移函数，它可以为阶跃函数或者曲线函数，它接
收参数n给出输出a，
下一节将给出各种不同的转移函数。
注意神经元中的w和b都是可调整的
标量参数。神经网络的中心思想就是参数的可调整使得网络展示需要和令人感兴趣的行为。
这样，
我们就可以通过调整权重和偏置参量训练神经网络做一定的工作。
或者神经网络自己
调整参数以得到想要的结果。 
  在这个工具箱里所有的神经元都提供偏置，
我们的许多例子中都用到了偏置并且假定它
在这个工具箱的大多数情况下都要用到。可是，如果你愿意的话，你也可以在一个神经元中
省略偏置。 
  正如上面所提到的，在神经元中，标量b是个可调整的参数。它不是一个输入。可是驱
动偏置的常量1 却是一个输入而且当考虑线性输入向量时一定要这样认为。 
  转移函数 
  在这个工具箱里包括了许多转移函数。你能在"Transfer 
Function 
Graphs"中找到它们
的完全列表。下面列出了三个最常用的函数。 
  
  
  上图所示的阶跃转移函数限制了输出，使得输入参数小于0 时输出为0，大于或等于0
时输出为1，在第三章中我们将用它来进行分类。 
  工具箱中有一个函数hardlim来数学上的阶跃，如上图所示。我们可以输入以下代码 
  n = -5:0.1:5; 
  plot(n,hardlim(n),'c+:'); 
  它产生一张在-5 到5 之间的阶跃函数图。 
  所有在工具箱中的数学转移函数都能够用同名的函数实现。 
  线性转移函数如下图所示 
  
  
  这种类型的神经元将在第四章的自适应线性滤波中用作线性拟合。 
  下图显示的曲线转移函数的输入参数是正负区间的任意值，而将输出值限定于0 到1
之间。 
   
 
  这种传递函数通常用于反向传播（BP）网络，这得益于函数的可微性。 
  在上面所示的每一个转移函数图的右边方框中的符号代表了对应的函数，
这些图表将替
换网络图的方框中的f来表示所使用的特定的转移函数。 
  第13 章列出了所有的转移函数和图标。你能够定义自己的传递函数，你可以不限于使
用第13 章所列的转移函数。你能够通过运行示例程序nn2